#include <Arduino.h>
#if defined(ESP32)
 #include <WiFi.h>
#elif defined(ESP8266)
 #include <ESP8266WiFi.h>
#endif
#include <Firebase_ESP_Client.h>
//Provide the token generation process info.
#include "addons/TokenHelper.h"
//Provide the RTDB payload printing info and other helper functions.
#include "addons/RTDBHelper.h"
// Insert your network credentials
#define WIFI_SSID "Dart"
#define WIFI_PASSWORD "028448954"
// Insert Firebase project API Key
#define API_KEY "AIzaSyAA0kSKJcRQMqSYOPMx44kE-7fKig3ACVc"
// Insert RTDB URLefine the RTDB URL */
#define DATABASE_URL "https://exp5-29cde-default-rtdb.firebaseio.com/"
//Define Firebase Data object
FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;
unsigned long sendDataPrevMillis = 0;
int count = 0; 
bool signupOK = false;
// Initilize DHT
#include "DHT.h"
#define DHTPIN 5 // Digital pin connected to the DHT sensor
#define DHTTYPE DHT11 // DHT 11
DHT dht(DHTPIN, DHTTYPE);
// defines variables
float t,h;
void setup()
{
 dht.begin();
 Serial.begin(115200);
 WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
 Serial.print("Connecting to Wi-Fi");
 while (WiFi.status() != WL_CONNECTED)
 {
 Serial.print(".");
 delay(300);
 }
 Serial.println();
 Serial.print("Connected with IP: ");
 Serial.println(WiFi.localIP());
 Serial.println();
 /* Assign the api key (required) */
 config.api_key = API_KEY;
 /* Assign the RTDB URL (required) */
 config.database_url = DATABASE_URL;
 /* Sign up */
 if (Firebase.signUp(&config, &auth, "", ""))
 {
 Serial.println("ok");
 signupOK = true;
 }
 else
 {
 Serial.printf("%s\n", config.signer.signupError.message.c_str());
 }
 /* Assign the callback function for the long running token generation task */
 config.token_status_callback = tokenStatusCallback; //see addons/TokenHelper.h

 Firebase.begin(&config, &auth);
 Firebase.reconnectWiFi(true);
}
void loop()
{
 read_t_h();
update_firebase();
}
void read_t_h()
{
 h = dht.readHumidity();
 t = dht.readTemperature();
 Serial.print("Humidity : ");
 Serial.print(h);
 Serial.print(" | Temperature: ");
 Serial.println(t);
delay(500);
}
void update_firebase()
{
 if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 1000 || sendDataPrevMillis == 0))
 {
 sendDataPrevMillis = millis();
 // Write an Int number on the database path test/int
 if (Firebase.RTDB.setInt(&fbdo, "Temperature = ", t))
 {
 Serial.println("PASSED");
 Serial.print("PATH: " + fbdo.dataPath());
 Serial.println(t);
 Serial.println("TYPE: " + fbdo.dataType());
 }
 else
 {
 Serial.println("FAILED");
 Serial.println("REASON: " + fbdo.errorReason());
 }
 if (Firebase.RTDB.setInt(&fbdo, "Humidity = ", h))
 {
 Serial.println("PASSED");
 Serial.print("PATH: " + fbdo.dataPath());
 Serial.println(h);
 Serial.println("TYPE: " + fbdo.dataType());
 }
 else
 {
 Serial.println("FAILED");
 Serial.println("REASON: " + fbdo.errorReason());
 }
 }
}