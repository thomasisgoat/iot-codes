#include <WiFi.h>
#include <PubSubClient.h>
#include <Wire.h>
#include "DHT.h"
#define DHTPIN 5 // Digital pin connected to the DHT sensor
#define DHTTYPE DHT11 // DHT 11
DHT dht(DHTPIN, DHTTYPE);
const char* ssid = "messi";
const char* password = "ronaldo7";
const char* mqtt_server = "broker.hivemq.com";
WiFiClient saiClient;
PubSubClient client(saiClient);
long lastMsg = 0;
char msg[50];
float temperature = 0;
float humidity = 0;
void setup()
{
 Serial.begin(115200);
 dht.begin();
 setup_wifi();
 client.setServer(mqtt_server, 1883);
 delay(1000);
}
void setup_wifi()
{
 delay(10);
 Serial.println();
 Serial.print("Connecting to ");
 Serial.println(ssid);
 WiFi.begin(ssid, password);
 while (WiFi.status() != WL_CONNECTED)
 {
 delay(500);
 Serial.print(".");
 }
 Serial.println("");
 Serial.println("WiFi connected");
 Serial.println("IP address: ");
 Serial.println(WiFi.localIP());
}
void reconnect()
{
 while (!client.connected())
 {
 Serial.print("Attempting MQTT connection...");
 if (client.connect("saiClient"))
 {
 Serial.println("connected");
 }
 else
 {
 Serial.print("failed, rc=");
 Serial.print(client.state());
 Serial.println(" try again in 5 seconds");
 delay(5000);
 }
 }
}
void t_h_msmt()
{
 humidity = dht.readHumidity();
 temperature = dht.readTemperature();
 Serial.print("Temperature: ");
 Serial.print(temperature);
 Serial.print(" | Humidity : ");
 Serial.println(humidity);
}
void MQTT_publish()
{
 char tempString[8];
 dtostrf(temperature, 1, 2, tempString);
 client.publish("TEMP", tempString);
 char humString[8];
 dtostrf(humidity, 1, 2, humString);
 client.publish("HUMIDITY", humString);
}
void loop()
{
 if (!client.connected())
 reconnect();
 client.loop();
 t_h_msmt();
 MQTT_publish();
 delay(2000);
}
